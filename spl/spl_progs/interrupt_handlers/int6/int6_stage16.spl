[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=7; //mode flag = read sys call num 7
alias userSP R0;
userSP=SP;
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13]=SP; //saving user stack pointer
SP=[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11]*512-1;//switching to kernal stack
alias physicalPageNum R1;
alias offset R2;
alias fileDescPhyscialAddr R3;
physicalPageNum=[PTBR+2*((userSP-4)/512)];
offset=(userSP-4)%512;
fileDescPhyscialAddr=(physicalPageNum*512)+offset;
alias fileDesciptor R4;
fileDesciptor=[fileDescPhyscialAddr];
if(fileDesciptor!=-1) then
    alias physicalAddrRetVal R5;
    physicalAddrRetVal=([PTBR+2*((userSP-1)/512)]*512)+((userSP-1)%512);
    [physicalAddrRetVal]=-1;
else
    alias wordAddress R5;
    wordAddress=[[PTBR+2*((userSP-3)/512)]*512+((userSP-3)%512)];
    multipush(R0,R1,R2,R3,R4,R5);
    R1=4;  // terminal_write func call number
    R2=[SYSTEM_STATUS_TABLE+1];
    R3=wordAddress;
    call DEVICE_MANAGER; //module 4
    multipop(R0,R1,R2,R3,R4,R5);
    alias physicalAddrRetVal R6;
    physicalAddrRetVal=([PTBR+2*((userSP-1)/512)]*512)+((userSP-1)%512);
    [physicalAddrRetVal]=0;
endif;
SP=userSP;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=0;
ireturn;