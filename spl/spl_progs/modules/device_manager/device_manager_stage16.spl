alias functionNum R1;
alias currentPID R2;
if(functionNum==3) then //terminal_write
    //calling acquire terminal
    multipush(R1,R2,R3);
    R1=8;
    R2=currentPID;
    call RESOURCE_MANAGER; //module 0
    multipop(R1,R2,R3);
    alias word R3;
    print word;
    //calling release terminal
    multipush(R1,R2,R3);
    R1=9;
    R2=currentPID;
    call RESOURCE_MANAGER; //module 0
    multipop(R1,R2,R3);
    return;
endif;
if(functionNum==4) then //terminal_read
    //calling acquire terminal
    multipush(R1,R2,R3);
    R1=8;
    R2=currentPID;
    call RESOURCE_MANAGER; //module 0
    multipop(R1,R2,R3);
    read;
    [PROCESS_TABLE+(currentPID*16)+4] = WAIT_TERMINAL;
    multipush(R1,R2,R3);
    call SCHEDULER;
    multipop(R1,R2,R3);
    alias wordAddress R3;
    alias physicalPageNum R4;
    alias offset R5;
    alias physicalAddress R6;
    physicalPageNum=[PTBR+2*(wordAddress/512)];
    offset=wordAddress%512;
    physicalAddress=physicalPageNum*512+offset;
    [physicalAddress]=[PROCESS_TABLE+(currentPID*16)+8]; //storing input buffer of process
    return;
endif;