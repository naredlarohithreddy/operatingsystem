alias functionNum R1;
alias currentPID R2;
if(functionNum==2) then //free user page
    alias userPage R3;
    userPage = [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11];
    multipush(R0,R1,R2,R3);
    R1=2; //release page
    R2=userPage;
    call MEMORY_MANAGER; //module 2
    multipop(R0,R1,R2,R3);
    return;
endif;
if(functionNum==3) then //exit 
    multipush(R0,R1,R2);
    R1=4; // free page table
    R2=currentPID;
    call PROCESS_MANAGER; //module 1
    multipop(R0,R1,R2);
    multipush(R0,R1,R2);
    R1=2; // free user page area
    R2=currentPID;
    call PROCESS_MANAGER; //module 1
    multipop(R0,R1,R2);
    [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=TERMINATED;
    return;
endif;
if(functionNum==4) then //free page table
    PTBR=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14];
    [PTBR+0]=-1; //invalidating lib pages
    [PTBR+1]="0000";
    [PTBR+2]=-1;
    [PTBR+3]="0000";
    alias i R4;
    i=0;
    while(i<8) do //releasing valid pages
        if([PTBR+2*i+4]!=-1) then   
            multipush(R0,R1,R2,R4);
            R1=2; //release page
            R2=[PTBR+2*i+4];
            call MEMORY_MANAGER; //module 2
            multipop(R0,R1,R2,R4); 
            [PTBR+2*i+4]=-1;                    // not in stage 18 code
            [PTBR+2*i+5]="0000";
        endif;
        i=i+1;
    endwhile;
    i=2;
    while(i<4) do
        if([DISK_FREE_LIST+10*currentPID+i]!=-1) then
            multipush(R0,R1,R2,R3,R4);
            R1=4; //release block
            R3=currentPID;
            R2=[DISK_FREE_LIST+10*currentPID+i];
            call MEMORY_MANAGER;
            multipop(R0,R1,R2,R3,R4);
        endif;
        i=i+1;
    endwhile;
    i=8;
    while(i<10) do
        if([DISK_FREE_LIST+10*currentPID+i]!=-1) then
            multipush(R0,R1,R2,R3,R4);
            R1=4; //release block
            R3=currentPID;
            R2=[DISK_FREE_LIST+10*currentPID+i];
            call MEMORY_MANAGER;
            multipop(R0,R1,R2,R3,R4);
        endif;
        i=i+1;
    endwhile;
    i=0;
    while(i<10) do //free disk map table
        [DISK_FREE_LIST+10*currentPID+i]=-1;
        i=i+1;
    endwhile;
    return;
endif;